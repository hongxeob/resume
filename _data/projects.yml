# Projects
# 콜드체인 3PL 통합 운영 프로젝트
- project: "콜드체인 3PL 통합 운영 프로젝트 (Client: HLB 테라퓨틱스)"
  role: 백엔드 개발
  duration: 2024.04 &mdash; 현재
  description: OMS/WMS/TMS를 통합한 백신 콜드체인 주문 배송 관리 시스템 (3PL)
  stack: Kotlin, Spring Boot, MySQL, MongoDB, JPA, QueryDSL
  tasks:
    - "<strong>아키텍처 설계 및 도메인 주도 설계 적용</strong> : 프로젝트 초기 요구사항 분석 및 전반적인 DB/아키텍처 설계 참여. Layered Architecture에서 DDD 기반 설계로 전환하여 복잡한 비즈니스 로직의 효율적 관리와 유연한 API 설계 달성"
    - "<strong>주문 시스템 개선</strong>: 1000줄 규모의 복잡한 주문 처리 로직을 책임 분리 및 인터페이스 기반 추상화와 전략/팩토리 패턴을 적용하여 간소화"
    - "<strong>카카오 모빌리티 API 연동 최적화</strong> : 외부 API 호출 시 요청 제한과 블로킹 I/O로 인한 성능 병목이 발생하여 동기식 FeignClient를 논블로킹 WebClient로 전환하고, 코루틴 기반 비동기 처리와 RateLimiter를 도입하여 대량 API 처리 시간을 평균 `46%` 감소. <a href='https://hongseob.tistory.com/110'>(자세히)</a> <br>
       - 외부 API 요청 제한에 대응하여 청크 단위 처리와 적응형 배치 사이즈 조절로 API 호출 안정성 향상<br>
      - JDBC 벌크 업데이트 구현으로 쿼리 수를 `92%` 감소<br>"
    - "<strong>MongoDB 기반 배차 경로 최적화 시스템 구축</strong> : 대용량 경로 데이터의 효율적 저장을 위해 MongoDB 도입<br>
      - 복합 인덱스를 통한 배송일자, 센터, 차량 기준의 빈번한 조회 성능 최적화 달성<br>"
    - "<strong>도메인 이벤트 기반 재고 이관 시스템 구축</strong> : 애그리거트간 결합도를 낮추고 비동기 처리를 도입하여 성능을 `950ms → 96ms`로 개선"
    - "<strong>재고 관리 시스템 동시성 문제 해결</strong> : 매우 빠르게 이루어지는 바코드 스캔 기반 입/출고 프로세스에서 생긴 동시성 문제를 Redis 분산락 구현으로 해소, 데이터 정합성 확보"
    - "<strong>대량 메일 발송 시스템 최적화</strong> : 코루틴 기반 비동기/병렬 처리 도입으로 다수 사용자 대상 발송 시간을 `인당 5초 → 일괄 4-5초`로 단축하여 약 60% 이상의 성능 향상 달성"

# 제주오늘
- project: 제주오늘
  role: 백엔드 개발
  duration: 2024.04 &mdash; 2024.05
  description: 신선도가 중요한 다양한 식품 제품을 제주도내 소비자에게 당일 전달하는 서비스
  stack: Kotlin, Spring Boot, MySQL, Redis, MongoDB, JPA, QueryDSL, Kafka, FCM, RabbitMQ
  tasks:
    - "<strong>관리자 및 드라이버 히스토리 페이지 개발</strong> : QueryDSL을 활용한 동적 필터링 및 검색 기능 개선과 대용량 데이터 처리를 위한 커서 기반 페이지네이션 적용으로 성능 최적화"
    - "<strong>FCM을 이용한 실시간 푸시 알림 시스템 개선</strong> : RDB에서 Redis로 FCM 토큰 관리 시스템을 개선하여 TTL을 활용한 토큰 신선도 관리와 캐싱을 통한 데이터베이스 부하 감소"
    - "<strong>Kafka를 활용한 이벤트 기반 시스템 구축</strong> : 배송 상태 변경에 따른 실시간 알림 발송 및 데이터 관리<br>
    - MSA 환경에서 Envelope 패턴 기반의 표준화된 메시지 처리 시스템을 구현하여 멱등성을 보장하고, 도메인 이벤트와 메시지 Envelope에 대한 독립적인 예외 처리 체계 구축<br>"
    - "<strong>레거시 서비스 마이그레이션</strong> : 기존 Koa.js 기반 서비스를 Kotlin + SpringBoot 기반 MSA로 마이그레이션하며 시스템 아키텍처 개선 및 리팩토링 수행"

# 모띠클
- project: 모띠클 (Motticle)
  role: 개인 프로젝트
  duration: 2023.12 &mdash; 2024.03 | 개인 프로젝트
  github_url: https://github.com/hongxeob/motticle
  description: 여기저기 파편화 되어 분류/관리가 어려웠던 여러 타입의 아티클들을 태그 기반으로 관리해주고 유저와 공유하는 서비스
  stack: Java 17, Spring Boot, MySQL, Redis, JPA, QueryDSL, AWS, Nginx, Docker, Github Actions
  tasks:
    - "<strong>전체 API 설계 및 문서화</strong> : 노션을 이용한 API 설계(명세)와 Spring RestDocs를 활용하여 테스트 기반의 API 문서화"
    - "<strong>테스트 기반의 견고한 코딩</strong> : 가성비 있는 단위 테스트를 진행하여 견고한 서비스 형성 및 코드 품질 향상"
    - "<strong>Frontend 구현을 통한 프로젝트 서비스화</strong> : 단순 API 설계를 넘어 HTML, CSS, JS를 활용한 화면 구현을 통해 완성도 높은 프로젝트 서비스화 달성"
    - "<strong>JWT + OAuth2 소셜 로그인 구현</strong> : 카카오톡 소셜 로그인 구현으로 간편한 서비스 이용 환경 제공"
    - "<strong>비동기적 데이터 처리 경험</strong> : 동기적으로 진행되었던 HTML 메타 데이터 크롤링 과정에 Stream, parallelStream, CompletableFuture등을 단계적으로 활용한 비동기적 데이터 처리로 지연 시간 개선 `(8.06s → 1.25s, 85% 개선)` <a href='https://hongseob.tistory.com/95'>(자세히)</a>"
    - "<strong>로컬 캐시 Caffein Cache 도입</strong> : 위 비동기적 데이터 처리에 Caffein Cache를 도입하여 지연 시간 최소화 `(최종 8.06s → 397ms로 95.08% 개선)` <a href='https://hongseob.tistory.com/96'>(자세히)</a>"
    - "<strong>인덱스를 통한 성능 개선</strong> : 대부분의 API 호출 전 사용되는 '회원 인증' 과정에서 email 컬럼에 인덱스 적용으로 Index Only Scan 유도하여 성능 향상 `(평균 80ms → 20~30ms, 70% 개선)`"
    - "<strong>Bucket4j를 활용한 서버 부하 방지</strong> : UI를 통해 단시간 많은 요청을 보낼 수 있는 기능에 Bucket4j를 통한 처리율 제한을 걸어 서버 부하를 방지 <a href='https://hongseob.tistory.com/100'>(자세히)</a>"
    - "<strong>Redis Pub/Sub 기반 SSE 실시간 알림 구현</strong> : 현재 모놀리스 서버이지만, 서버 Scale Out 상황을 고려한 알림 구현"
    - "<strong>비동기 이벤트 및 트랜잭션 전파 레벨 처리를 통한 알림 서비스 개선</strong> : 비동기 이벤트 퍼블리싱을 통해 결합도를 낮추고, 트랜잭션 전파 레벨 설정을 이용하여 알림 전송 실패 시 메인 서비스 로직 롤백 방지로 시스템 안정성과 확장성 극대화"
    - "<strong>CI/CD 파이프라인 구축 및 배포 자동화</strong> : AWS, Docker, Github Actions, Nginx 활용한 Blue/Green 무중단 배포 자동화 구축"

# 네이버 예약 취소 알리미
- project: 나를 위한 네이버 예약 취소 알리미
  role: 개인 프로젝트
  duration: 2023.08 &mdash; 2023.08 | 개인 프로젝트
  github_url: https://github.com/hongxeob/TimeGuard_Alert
  description: 이용하던 미용실의 네이버 예약 시스템에 피로함을 느껴 만든 예약 취켓팅 알리미 서비스
  stack: Java 17, Spring Boot, OpenFeign, TelegramBots
  tasks:
    - "<strong>단기간 서비스 개발 경험</strong> : 24시간의 Due Date를 가진 자체 해커톤을 통해 단기간에 서비스를 개발"
    - "<strong>Feign Client를 활용한 외부 API 연동</strong> : 네이버 예약 API의 응답 데이터를 개발자 도구와 FeignClient를 이용하여 분석하고, 이를 통해 예약 가능 여부를 판단"
    - "<strong>텔레그램 봇 API 연동</strong> : 기존 CLI가 아닌 텔레그램 통해 사용자가 간편하게 정보 입력 및 예약 여부 확인을 할 수 있도록 구현"
    - "<strong>스케줄러를 이용한 자동화 시스템 구축</strong> : 사용자가 수동으로 예약 여부를 확인할 필요 없이, 주기적으로 예약 여부를 판단하여 자동으로 처리"
